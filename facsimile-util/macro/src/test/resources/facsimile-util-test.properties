# Facsimile -- A Discrete-Event Simulation Library
# Copyright © 2004-2016, Michael J Allen.
#
# This file is part of Facsimile.
#
# Facsimile is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# Facsimile is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License along with Facsimile. If not, see
# http://www.gnu.org/licenses/lgpl.
#
# The developers welcome all comments, suggestions and offers of assistance. For further information, please visit the
# project home page at:
#
#   http://facsim.org/
#
# Thank you for your interest in the Facsimile project!
#
# IMPORTANT NOTE: All patches (modifications to existing files and/or the addition of new files) submitted for inclusion
# as part of the official Facsimile code base, must comply with the published Facsimile Coding Standards. If your code
# fails to comply with the standard, then your patches will be rejected. For further information, please visit the
# coding standards at:
#
#   http://facsim.org/Documentation/CodingStandards/
#=======================================================================================================================
# Resource bundle properties file (en_US locale) for the Facsimile test suite. These resources are used for testing
# purposes; changes to existing definitions will cause tests to fail!
#
# For the syntax of this file, refer to:
#
#   http://docs.oracle.com/javase/6/docs/api/java/text/MessageFormat.html
#=======================================================================================================================

# Test choice message. Depending upon numeric value, a different string will be reported.

testChoiceResource = {0,choice,0#On your marks...|1#Get set...|2#Go!}

# Test compound resource with 1 argument.

testCompoundResource0 = Test compound resource 0: 0={0}

# Test compound resource with 2 arguments.

testCompoundResource1 = Test compound resource 1: 0={0}, 1={1}

# Test compound resource with 3 arguments.

testCompoundResource2 = Test compound resource 2: 0={0}, 1={1}, 2={2}

# Test resource containing a single date argument.

testDateResource = {0,date,short}

# Test resource for testing localization & internationalization.

testHelloResource = Howdy!

# Test resource containing a single integer argument.

testRealResource = {0,number,#,###.##}

# Test resource with no arguments.

testSingleResource = Test non-compound resource

# Non-string resource.
#
# NOTE: There currently appears to be no way to define resources that aren't strings, at least in these .properties
# files. Consequently, the test for a non-string resource cannot be defined.
#
#testNonStringResource = ?
