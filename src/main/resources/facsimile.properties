# Facsimile -- A Discrete-Event Simulation Library
# Copyright © 2004-2012, Michael J Allen.
#
# This file is part of Facsimile.
#
# Facsimile is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# Facsimile is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# Facsimile.  If not, see http://www.gnu.org/licenses/lgpl.
#
# The developers welcome all comments, suggestions and offers of assistance.
# For further information, please visit the project home page at:
#
#   http://facsim.org/
#
# Thank you for your interest in the Facsimile project!
#
# IMPORTANT NOTE: All patches (modifications to existing files and/or the
# addition of new files) submitted for inclusion as part of the official
# Facsimile code base, must comply with the published Facsimile Coding
# Standards.  If your code fails to comply with the standard, then your patches
# will be rejected.  For further information, please visit the coding standards
# at:
#
#   http://facsim.org/Documentation/CodingStandards/
#==============================================================================
# Resource bundle properties file (en_US locale) for the Facsimile library.
#
# For the syntax of this file, refer to:
#
#   http://docs.oracle.com/javase/6/docs/api/java/text/MessageFormat.html
#
# Each section in this file must correspond to a Java/Scala package.  Each
# section must be named for the corresponding package name, after the prefix
# "org.facsim." has been removed.  For example, the package "org.facsim.x" will
# be named "x".  (The root package is regarded as having an empty name.)
#
# Sections must be listed in alphabetical, hierarchical order.  For example:
#
#   {empty}
#   a
#   a.a
#   a.b
#   a.b.a
#   b
#
# Resource keys must be named as follows:
#
# sectionName.elementName[.propertyName]
#
# where "sectionName" is the section name and "elementName" is the name of
# class, object, trait or function to which the resource key belongs.
#
# If the associated element's name ends in "Exception", then that suffix should
# be removed from the corresponding resource key name.  For example, if
# exception class org.facsim.somepackage.SomeException requires an error
# message resource key, then that key would likely be called
# "somepackage.Some".
#
# Elements that require, or that potentially require, multiple resource keys
# must append a unique propertyName identifier (see above) to each resource key
# name.
#
# Within each section, resource keys must be listed in alphabetical,
# hierarchical order.  For example, resource keys in package "x" would be
# listed as follows:
#
#   x.ClassA
#   x.ClassB.propertyA
#   x.ClassB.propertyB
#   x.ClassC
#
# Alphabetical, hierarchical ordering of sections and resource keys assists
# with maintenance and organization - particularly for large resource files.
#==============================================================================

#==============================================================================
# org.facsim package resources.
#
# THIS SECTION HAS NOT BEEN VALIDATED!
#==============================================================================

# Application copyright message, for applications released the same year that
# work on them commenced.
# Arguments:
#   0   Name of the organization holding the copyright.  It is assumed that
#       this name ends in a period (".").  If not, the message will likely not
#       appear to be formatted correctly.
#   1   Application development replacement date.

Behavior.CopyrightBasic = Copyright © {1,date,yyyy} {0}  All rights reserved.

# Application copyright message, for applications released over a number of
# years.
# Arguments:
#   0   Name of the organization holding the copyright.  It is assumed that
#       this name ends in a period (".").  If not, the message will likely not
#       appear to be formatted correctly.
#   1   Date project was started.
#   2   Release date of this version of the application.

Behavior.CopyrightRange = Copyright © {1,date,yyyy}-{2,date,yyyy} {0}  All \
rights reserved.

# Application version string, final variant without label.
# Arguments:
#   0   Major version number.
#   1   Minor version number.
#   2   Release (bug-fix) version number.

Behavior.VersionFinal = {0,number,integer}.{1,number,integer}-\
{2,number,integer}

# Application version string, pre-release variant with label.
# Arguments:
#   0   Major version number.
#   1   Minor version number.
#   2   Release (bug-fix) version number.
#   3   Pre-release label

Behavior.VersionPreRelease = {0,number,integer}.{1,number,integer}-\
{2,number,integer}:{3}

# Application behavior redefinition exception message:
# Arguments:
#   0   Name of currently defined behavior.
#   1   Name of attempted redefined behavior.

BehaviorRedefinition = Attempt to replace existing application behavior \
failed: existing '{0}'; replacement '{1}'

# Require non-null argument message:
# Arguments:
#   0   Name of argument found to be null.

requireNonNull = Argument '{0}' cannot be null.

# Require valid argument message:
# Arguments:
#   0   Name of argument found to be invalid.
#   1   Illegal argument value as a string.

requireValid = Argument '{0}' has illegal value: {1}

#==============================================================================
# org.facsim.gui package resources.
#
# THIS SECTION HAS NOT BEEN VALIDATED!
#==============================================================================

# Label to be displayed inside the close button on the About dialog.

gui.About.Close = OK

# Title of the About dialog box.
# Arguments:
#   0   Application title.

gui.About.Title = About {0}

# Version of application in the About dialog box.
# Arguments:
#   0   Application version as a string.

gui.About.Version = Version: {0}

#==============================================================================
# org.facsim.inf package resources.
#
# THIS SECTION HAS NOT BEEN VALIDATED!
#==============================================================================

# Test string.
#
# This string resource is provided to assist with testing of the
# org.facsim.inf.LibResource object, and has no other
# purpose.

inf.LibResource.TestMessage = ;/xLx$Z)U^JnZ6^uqNod0Cb2sDLZc]!b

# Missing manifest data exception.
# Arguments:
#   0   Name of undefined manifest field.

inf.MissingManifestData = Missing requested JAR manifest field: {0}

#==============================================================================
# org.facsim.io package resources.
#==============================================================================

# Field conversion exception as thrown by the TextReader class.
# Arguments:
#   0   Row number for the start of the failed field.
#   1   Column number for the start of the failed field.
#   2   Value of field that failed conversion.
#   3   Canonical name of type to which field was being converted.

io.FieldConversion = Field conversion of value '{2}' to type '{3}' failed. \
Row: {0,number,integer}, Column: {1,number,integer}.

# Field verification exception as thrown by the TextReader class.
# Arguments:
#   0   Row number for the start of the failed field.
#   1   Column number for the start of the failed field.
#   2   Value of field that failed verification.

io.FieldVerification = Field verification of value '{2}' failed. Row: \
{0,number,integer}, Column: {1,number,integer}.

#==============================================================================
# org.facsim.engine package resources.
#
# THIS SECTION HAS NOT BEEN VALIDATED!
#==============================================================================

# Simulation out-of-events exception message.

engine.Simulation.OutOfEventsException.message = \
Simulation has run out of events.

# Description of NullAction operation.

engine.Simulation.NullAction.description = Simulation null action.

# Error message to be displayed if a NullAction is executed.

engine.Simulation.NullAction.executeError = \
org.facsim.facsimile.Simulation.NullAction action should never be executed.

#==============================================================================
# org.facsim.measure package resources.
#
# THIS SECTION HAS NOT BEEN VALIDATED!
#==============================================================================

# Day units.

measure.timeUnit.day.plural = days
measure.timeUnit.day.singular = day
measure.timeUnit.day.symbol = dy

# Hour units.

measure.timeUnit.hour.plural = hours
measure.timeUnit.hour.singular = hours
measure.timeUnit.hour.symbol = hr

# Time unit name.

measure.timeUnit.name = time

# Millisecond units.

measure.timeUnit.millisecond.plural = milliseconds
measure.timeUnit.millisecond.singular = millisecond
measure.timeUnit.millisecond.symbol = ms

# Minute units.

measure.timeUnit.minute.plural = minutes
measure.timeUnit.minute.singular = minute
measure.timeUnit.minute.symbol = min

# Second units.

measure.timeUnit.second.plural = seconds
measure.timeUnit.second.singular = second
measure.timeUnit.second.symbol = s

# Week units.

measure.timeUnit.week.plural = weeks
measure.timeUnit.week.singular = week
measure.timeUnit.week.symbol = wk

#==============================================================================
# Test resources.

# These resources must not be translated and are required for successful
# execution of the test suite.  They should not be referenced except from
# within the test suite.
#
# THIS SECTION HAS NOT BEEN VALIDATED!
#==============================================================================

testCompoundMessage0 = Test compound message 0: 0={0}
testCompoundMessage1 = Test compound message 1: 0={0}, 1={1}
testCompoundMessage2 = Test compound message 2: 0={0}, 1={1}, 2={2}
testMessage = Test message
